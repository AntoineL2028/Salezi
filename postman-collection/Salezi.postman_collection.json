{
	"info": {
		"_postman_id": "abe61a66-1551-45a6-810d-cc5f9b9aa6e5",
		"name": "Salezi",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30682573"
	},
	"item": [
		{
			"name": "See All datas from a collection",
			"item": [
				{
					"name": "All Books",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Books {\n    books {\n        data {\n            id\n            attributes {\n                Title\n                Author\n                Price\n                Stock\n                Description\n                CreatedBy\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    Name\n                    id\n                }\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All cds",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Cds {\n    cds {\n        data {\n            id\n            attributes {\n                Artist\n                Title\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "All electronics",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Electronics {\n    electronics {\n        data {\n            id\n            attributes {\n                Brand\n                Model\n                Description\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "See data for an id",
			"item": [
				{
					"name": "Book_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Book($id: ID) {\n    book(id: $id) {\n        data {\n            id\n            attributes {\n                Title\n                Author\n                Price\n                Stock\n                Description\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 2\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "CD_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Cd ($id: ID) {\n    cd(id: $id) {\n        data {\n            id\n            attributes {\n                Artist\n                Title\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 3\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Electronic_id",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query Electronic ($id: ID) {\n    electronic(id: $id) {\n        data {\n            id\n            attributes {\n                Brand\n                Model\n                Description\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 5\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create element",
			"item": [
				{
					"name": "Create Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateBook {\n    createBook(\n        data: {\n            Title: \"One piece\"\n            Author: \"Eiichiro Oda\"\n            Price: 6.99\n            Stock: 200\n            Description: \"Strawhat pirate\"\n            user: null\n            CreatedBy: null\n            Format: [\n                {\n                    Name: \"Physical\"\n                }\n            ]\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Title\n                Author\n                Price\n                Stock\n                Description\n                CreatedBy\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create CD",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateCd {\n    createCd(\n        data: {\n            Artist: \"Damso\"\n            Title: \"QALF Infinity\"\n            Price: 24.99\n            Stock: 45\n            Format: [\n                {\n                    Name: \"Vinyle\"\n                }\n            ]\n        }\n    ) {\n        data {\n            attributes {\n                Artist\n                Title\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n            id\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Electronic",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateElectronic {\n    createElectronic(\n        data: {\n            Brand: \"Apple\"\n            Model: \"Airpods Max\"\n            Description: [\n                {\n                        type: \"paragraph\",\n                            children: [\n                                {\n                                    type: \"text\",\n                                    text: \"Casque Apple avec reduction de bruit\"\n                                }\n                            ]\n                    },\n                    {\n                                type: \"paragraph\",\n                                children: [\n                                    {\n                                        type: \"text\",\n                                        text: \"Bluetooth et c√¢ble de charge USB-C\"\n                                    }\n                                ]\n                            },\n            ]\n            Price: 529.99\n            Stock: 40\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Brand\n                Model\n                Description\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update Element",
			"item": [
				{
					"name": "Update Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateBook ($id: ID!) {\n    updateBook(\n        id: $id\n        data: {\n            Title: \"Banksy's art\"\n            Author: \"Banksy\"\n            Price: 24.99\n            Stock: 20\n            Description: \"Banksy's history and art in a book\"\n            Format: [\n                {\n                    Name: \"Physical\"\n                }\n            ]\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Title\n                Author\n                Price\n                Stock\n                Description\n                CreatedBy\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 2\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update CD",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation UpdateCd ($id: ID!) {\n    updateCd(\n        id: $id\n        data: {\n            Artist: \"Bigflo et Oli\"\n            Title: \"La vie la vraie\"\n            Price: 14.99\n            Stock: 35\n            Format: [\n                {\n                    Name: \"Vinyle\"\n                }\n            ]\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Artist\n                Title\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 3\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Electronic",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation CreateElectronic ($id: ID!) {\n    updateElectronic(\n        id: $id\n        data: {\n            Brand: \"Apple\"\n            Model: \"Inoxtag\"\n            Description: [\n                {\n                        type: \"paragraph\",\n                            children: [\n                                {\n                                    type: \"text\",\n                                    text: \"Localisation par objet\"\n                                }\n                            ]\n                    },\n                    {\n                                type: \"paragraph\",\n                                children: [\n                                    {\n                                        type: \"text\",\n                                        text: \"Utilisable en : France\"\n                                    }\n                                ]\n                            },\n            ]\n            Price: 34.99\n            Stock: 1\n        }\n    ) {\n        data {\n            id\n            attributes {\n                Brand\n                Model\n                Description\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 5\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete Element",
			"item": [
				{
					"name": "Delete Book",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteBook ($id: ID!) {\n    deleteBook(id: $id) {\n        data {\n            id\n            attributes {\n                Title\n                Author\n                Price\n                Stock\n                Description\n                CreatedBy\n                createdAt\n                updatedAt\n                publishedAt\n                Format {\n                    id\n                    Name\n                }\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 17\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete CD",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteCd ($id: ID!){\n    deleteCd(id: $id) {\n        data {\n            id\n            attributes {\n                Artist\n                Title\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 19\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Electronic",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation DeleteElectronic ($id: ID!) {\n    deleteElectronic(id: $id) {\n        data {\n            id\n            attributes {\n                Brand\n                Model\n                Description\n                Price\n                Stock\n                createdAt\n                updatedAt\n                publishedAt\n            }\n        }\n    }\n}\n",
								"variables": "{\n    \"id\": 14\n}"
							}
						},
						"url": {
							"raw": "http://{{api_url}}",
							"protocol": "http",
							"host": [
								"{{api_url}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "33801ecba8c030d00f60d0ffce9dd577010fccdaa761b698386e2f1c726a4f7e30a7f15a1496696bdb1d1cad2670d86616dc47048166f75e5ca92dd123fe3e24dacb08501c34c121cb530306028cbf5f31dd0f6e7e5ab2783c8db0aeff6a1a012891742502ead78d082459177f372bf086d8391f85ad2fcc15c80f1bf0dcaa10",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api_url",
			"value": "localhost:1337/graphql"
		}
	]
}